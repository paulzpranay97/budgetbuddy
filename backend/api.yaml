swagger: '2.0'
info:
  title: Budgetbuddy.com API Docs
  description: API for managing user accounts and users data
  version: 1.0.0
host: bbuddybe.onrender.com
basePath: /
schemes:
  - https
  - http
definitions:
  User:
    type: object
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
        format: password
      picture:
        type: string
      mobile_number:
        type: number

  DataModel:
    type: object
    properties:
      _id:
        type: string
      user:
        type: string
      title:
        type: string
      type:
        type: string
      category:
        type: string
      amount:
        type: number
      comment:
        type: string
      date:
        type: string

  ExpenseByCategory:
    type: object
    properties:
      category:
        type: string
      totalExpense:
        type: number

  IncomeByCategory:
    type: object
    properties:
      category:
        type: string
      totalIncome:
        type: number
paths:
  /users/signup:
    post:
      tags:
        - User
      summary: Creates a new user account
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: user
          description: User object
          schema:
            $ref: '#/definitions/User'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              msg:
                type: string
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              msg:
                type: string
        '409':
          description: Conflict
          schema:
            type: object
            properties:
              msg:
                type: string
  /users/login:
    post:
      tags:
        - User
      summary: Logs in a user
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: login
          description: Login credentials
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
                format: password
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              msg:
                type: string
              token:
                type: string
              refreshToken:
                type: string
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              msg:
                type: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties:
              msg:
                type: string
  /users/logout:
    post:
      tags:
        - User
      summary: Logs out a user
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              msg:
                type: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties:
              msg:
                type: string
  /users/:
    get:
      tags:
        - User
      summary: Gets the current user
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              name:
                type: string
              email:
                type: string
              picture:
                type: string
              mobile_number:
                type: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties:
              msg:
                type: string
  /budget/adddata:
    post:
      tags:
        - Users Data APIs
      summary: Create new data
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: body
          name: data
          description: Data object
          schema:
            $ref: '#/definitions/DataModel'
      responses:
        '201':
          description: Created
          schema:
            type: object
            properties:
              _id:
                type: string
              user:
                type: string
              title:
                type: string
              type:
                type: string
              category:
                type: string
              amount:
                type: number
              comment:
                type: string
              date:
                type: string
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string

  /budget/updata/{id}:
    put:
      tags:
        - Users Data APIs
      summary: Update data by ID
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the data to update
        - in: body
          name: data
          description: Data object
          schema:
            $ref: '#/definitions/DataModel'
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              _id:
                type: string
              user:
                type: string
              title:
                type: string
              type:
                type: string
              category:
                type: string
              amount:
                type: number
              comment:
                type: string
              date:
                type: string
        '400':
          description: Bad request
          schema:
            type: object
            properties:
              message:
                type: string
        '404':
          description: Data not found

  /budget/deldata/{id}:
    delete:
      tags:
        - Users Data APIs
      summary: Delete data by ID
      consumes:
        - application/json
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          type: string
          description: ID of the data to delete
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              message:
                type: string
        '404':
          description: Data not found

  /budget/viewalldata:
    get:
      tags:
        - Users Data APIs
      summary: View all data
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/monthlydata/{month}:
    get:
      tags:
        - Users Data APIs
      summary: View data for a specific month
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: month
          type: integer
          description: Number representing the month (1-12)
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/databycat/{category}:
    get:
      tags:
        - Users Data APIs
      summary: View data by category
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: category
          type: string
          description: Category of the data
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/databytitle:
    get:
      tags:
        - Users Data APIs
      summary: View data by title
      produces:
        - application/json
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: title
          type: string
          description: Title of the data (optional)
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/totalincome:
    get:
      tags:
        - Users Data APIs
      summary: View total income
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              TotalIncome:
                type: number
        '401':
          description: Unauthorized

  /budget/totalexpense:
    get:
      tags:
        - Users Data APIs
      summary: View total expense
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              TotalExpense:
                type: number
        '401':
          description: Unauthorized

  /budget/totalprofit:
    get:
      tags:
        - Users Data APIs
      summary: View total profit
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: object
            properties:
              totalProfit:
                type: number
        '401':
          description: Unauthorized

  /budget/totalex-category:
    get:
      tags:
        - Users Data APIs
      summary: View total expense by category (ascending)
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ExpenseByCategory'
        '401':
          description: Unauthorized

  /budget/totalin-category:
    get:
      tags:
        - Users Data APIs
      summary: View total income by category (ascending)
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/IncomeByCategory'
        '401':
          description: Unauthorized

  /budget/allexpense:
    get:
      tags:
        - Users Data APIs
      summary: View all expenses
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/allexpense-asc:
    get:
      tags:
        - Users Data APIs
      summary: View all expenses in ascending order of amount
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/allexpense-dsc:
    get:
      tags:
        - Users Data APIs
      summary: View all expenses in descending order of amount
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/allincome:
    get:
      tags:
        - Users Data APIs
      summary: View all incomes
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/allincome-asc:
    get:
      tags:
        - Users Data APIs
      summary: View all incomes in ascending order of amount
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized

  /budget/allincome-dsc:
    get:
      tags:
        - Users Data APIs
      summary: View all incomes in descending order of amount
      produces:
        - application/json
      security:
        - BearerAuth: []
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/DataModel'
        '401':
          description: Unauthorized
securityDefinitions:
  BearerAuth:
    type: apiKey
    name: Authorization
    scheme: Bearer
    in: header